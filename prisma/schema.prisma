// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String    @unique
  password  String
  profile   Profile?
  role      Roles     @default(USER)
  tweets    Tweet[]
  following Follows[] @relation("Following")
  follower  Follows[] @relation("Follower")
}

model Profile {
  userId String  @id
  name   String
  bio    String?
  image  String?
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Follows {
  id          Int    @id @default(autoincrement())
  followingId String
  followerId  String
  following   User   @relation("Following", fields: [followingId], references: [id], onDelete: Cascade)
  follower    User   @relation("Follower", fields: [followerId], references: [id], onDelete: Cascade)

  @@unique([followerId, followingId])
}

model Tweet {
  id       Int      @id @default(autoincrement())
  username String
  text     String?
  img      String?
  createAt DateTime @default(now())

  user User @relation(fields: [username], references: [username], onDelete: Cascade)
}

enum Roles {
  USER
  ADMIN
}
